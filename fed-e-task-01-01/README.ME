JS代码大多是以同步方式运行的，但是这样会造成效率低下，并且一旦代码发生阻塞，会影响后续代码的执行，这时候就需要用到JS异步编程。
在JS执行代码的时候，会把代码放到调用栈中执行，这时候，同步代码会直接执行，异步代码则会放入消息队列中等待执行，当同步代码执行完毕
后，event loop会去监听消息队列中的任务，从消息队列中依次取出回调函数放入调用栈中执行，这个过程是循环不断的。
在调用栈中，每次执行的任务都可以视作一个宏任务，在执行宏任务过程中，如果碰到微任务，会添加到微任务的队列中，当当前宏任务执行完毕时，
会立即执行当前微任务队列中的所有微任务，然后执行下一个宏任务。
常见的宏任务包括：整体script代码，setTimeout等
微任务包括：Promise.then 等
